{"version":3,"sources":["render.js","render.ts"],"names":[],"mappings":"AAAA,CAAC,UAAU,OAAO,EAAE;AAChB,QAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,OAAO,MAAM,CAAC,OAAO,KAAK,QAAQ,EAAE;AAClE,YAAI,CAAC,GAAG,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,AAAC,IAAI,CAAC,KAAK,SAAS,EAAE,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC;KAC9E,MACI,IAAI,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,GAAG,EAAE;AACjD,cAAM,CAAC,CAAC,SAAS,EAAE,SAAS,EAAE,mBAAmB,EAAE,qBAAqB,CAAC,EAAE,OAAO,CAAC,CAAC;KACvF;CACJ,CAAA,CAAE,UAAU,OAAO,EAAE,OAAO,EAAE;AAC3B,gBAAY,CAAC;;ACPjB,QAAA,SAAA,GAAA,OAAA,CAAiE,mBACjE,CAAC,CADmF;AACpF,QAAA,WAAA,GAAA,OAAA,CAAsB,qBAGtB,CAAC,CAH0C;AAG3C,aAAA,MAAA,CAA+B,GAAS,EAA6B;YAA3B,OAAO,yDAAkB,EAAE;;AACpE,iBAAA,CAAA,KAAK,CAAC,OAAO,CAAC,CAAA;AACd,mBAAA,CAAA,OAAS,CAAC,GAAG,CAAC,CAAA;AACd,eAAO,SAAA,CAAA,MAAM,EAAE,CAAA;KACf;AAJD,UAAA,CAAA,cAAA,CAAA,OAAA,EAAA,YAAA,EAAA,EAAA,KAAA,EAAA,IAAA,EAAA,CAAA,CAAA;ADYI,WAAO,CAAC,OAAO,GAAG,MCRrB,CAAA;AAOD,aAAA,mBAAA,CACC,GAAS,EACT,UAAkB,EAClB,WAAmB,EACQ;YAA3B,OAAO,yDAAkB,EAAE;;AAE3B,iBAAA,CAAA,KAAK,CAAC,OAAO,CAAC,CAAA;AACd,iBAAA,CAAA,cAAc,CAAC,UAAU,EAAE,WAAW,CAAC,CAAA;AACvC,mBAAA,CAAA,OAAS,CAAC,GAAG,CAAC,CAAA;AACd,eAAO,SAAA,CAAA,mBAAmB,EAAE,CAAA;KAC5B;AAVe,WAAA,CAAA,mBAAmB,GAAA,mBAUlC,CAAA;CDDA,CAAC,CAAC","file":"render.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", './private/context', './private/renderAny'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var context_1 = require('./private/context');\n    var renderAny_1 = require('./private/renderAny');\n    function render(ast, options = {}) {\n        context_1.setUp(options);\n        renderAny_1.default(ast);\n        return context_1.finish();\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = render;\n    function renderWithSourceMap(ast, inFilePath, outFilePath, options = {}) {\n        context_1.setUp(options);\n        context_1.setUpSourceMap(inFilePath, outFilePath);\n        renderAny_1.default(ast);\n        return context_1.finishWithSourceMap();\n    }\n    exports.renderWithSourceMap = renderWithSourceMap;\n});\n","import Node from 'esast/lib/Node'\nimport {finish, finishWithSourceMap, setUp, setUpSourceMap} from './private/context'\nimport renderAny from './private/renderAny'\n\n/** Create JavaScript source code from a [[Node]]. */\nexport default function render(ast: Node, options: RenderOptions = {}): string {\n\tsetUp(options)\n\trenderAny(ast)\n\treturn finish()\n}\n\n/**\nSame as [[render]], but with a source map as part of the output.\n@param inFilePath Name of input file.\n@param outFilePath Name of output file.\n*/\nexport function renderWithSourceMap(\n\tast: Node,\n\tinFilePath: string,\n\toutFilePath: string,\n\toptions: RenderOptions = {})\n\t: {code: string, sourceMap: string} {\n\tsetUp(options)\n\tsetUpSourceMap(inFilePath, outFilePath)\n\trenderAny(ast)\n\treturn finishWithSourceMap()\n}\n\nexport interface RenderOptions {\n\t/** If true, will not render unnecessary whitespace. */\n\tugly?: boolean\n}\n"],"sourceRoot":"/source/"}